- alias: '5pm Temperature Notofications (Wed-Fri)'
  trigger:
    platform: time
    # wed, thur, fri at 5pm
    minutes: 0
    hours: 17
    seconds: 0
  condition:
    - condition: time
      weekday:
        - wed
        - thu
        - fri
    - condition: state
      entity_id: group.presence
      state: not_home
  action:
    service: notify.smtp_notify1
    data:
      title: "Temperature Report"
      message: "The temperature in {{ states.sensor.bed1_temperature.friendly_name }} is {{ states('sensor.bed1_temperature') }}{{ states.sensor.bed1_temperature.attributes['unit_of_measurement'] }} and {{ states.sensor.bed2_temperature.friendly_name }} is {{ states('sensor.bed2_temperature') }}{{ states.sensor.bed2_temperature.attributes['unit_of_measurement'] }}" 

- alias: 'Motion detection notifications (Kids)'
  trigger:
    platform: state
    entity_id: binary_sensor.bed1_motion
    from: "off"
    to: "on"
  condition:
    condition: time
    after: "20:00:00"
    before: "23:30:00"
  action:
    service: script.turn_on
    entity_id: script.motion_sense_notify_wait_10mins
        
- alias: 'Internal motion detection alarm'
  trigger:
    - platform: state
      entity_id: binary_sensor.bed1_motion
      from: 'off'
      to: 'on'
    - platform: state
      entity_id: binary_sensor.garage_motion
      from: 'off'
      to: 'on'
    - platform: state
      entity_id: binary_sensor.kitchen_motion
      from: 'off'
      to: 'on'
  condition:
    condition: state
    entity_id: group.presence
    state: not_home
  action:
    service: notify.smtp_notify1
    data:
      title: "ALERT: Internal Motion Detection"
      message: >
       Internal motion detection was triggered at {{ now }}. The following sensors were triggered:
       {% for sensor in states.group.internal_motion.attributes.entity_id %}
         {% if states(sensor) == "on" %}{{ sensor.split(".")[1].split("_")[0].capitalize() }}
         {% endif %}
       {% endfor %}. 

- alias: 'Update Available Notifications'
  trigger:
    platform: state
    entity_id: updater.updater
  action:
    service: notify.smtp_notify1
    data:
      title: "Update Available"
      message: 'Update for Home Assistant is available.'

